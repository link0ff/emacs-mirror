
Subject: Can't open gzipped files from tar archives

cd /tmp

echo "test" | gzip > test.gz
zip test.zip test.gz
C-x C-f test.zip RET
RET  ; (archive-extract)

File content is nicely displayed ungzipped from zip archive.

echo "test" | gzip > test.gz
tar zcvf test.tar.gz test.gz
C-x C-f test.tar.gz RET
RET  ; (tar-extract)

Garbage is displayed instead of ungzipped file content.

(qv "/home/juri/src/emacs/emacs-mirror/emacs/lisp/arc-mode.el"
    "^[ 	]*(archive-try-jka-compr)     ;Pretty ugly hack :-($")

It still doesn't support Unicode.

Subject: flymake-start-on-save-buffer has no effect

I have flymake-start-on-save-buffer set to t to check syntax
only when a buffer is saved, but it still checks the unfinished work
while edits are in progress showing the errors that make no sense
until the buffer is saved, even when flymake-start-syntax-check-on-newline
and flymake-start-on-flymake-mode are nil.

(setq flymake-no-changes-timeout nil)

It still starts flymake on yanking text that contains newlines.
I had to reset also flymake-start-syntax-check-on-newline to nil.

C-x v g
a

Debugger entered--Lisp error: (error "Invalid argument to vc-annotate-warp-revision")
  signal(error ("Invalid argument to vc-annotate-warp-revision"))
  error("Invalid argument to vc-annotate-warp-revision")
  vc-annotate-warp-revision(nil "/home/juri/src/social/pleroma/https/pleroma-fe/src...")
  (if (not rev-at-line) (message "Cannot extract revision number from the current li...") (setq prev-rev (vc-call-backend vc-annotate-backend 'previous-revision fname rev)) (vc-annotate-warp-revision prev-rev fname))
  (let* ((rev-at-line (vc-annotate-extract-revision-at-line)) (prev-rev nil) (rev (car rev-at-line)) (fname (cdr rev-at-line))) (if (not rev-at-line) (message "Cannot extract revision number from the current li...") (setq prev-rev (vc-call-backend vc-annotate-backend 'previous-revision fname rev)) (vc-annotate-warp-revision prev-rev fname)))
  (if (not (equal major-mode 'vc-annotate-mode)) (message "Cannot be invoked outside of a vc annotate buffer") (let* ((rev-at-line (vc-annotate-extract-revision-at-line)) (prev-rev nil) (rev (car rev-at-line)) (fname (cdr rev-at-line))) (if (not rev-at-line) (message "Cannot extract revision number from the current li...") (setq prev-rev (vc-call-backend vc-annotate-backend 'previous-revision fname rev)) (vc-annotate-warp-revision prev-rev fname))))
  vc-annotate-revision-previous-to-line()
  funcall-interactively(vc-annotate-revision-previous-to-line)
  call-interactively(vc-annotate-revision-previous-to-line nil nil)
  command-execute(vc-annotate-revision-previous-to-line)

It seems ~/.emacs.d/elpa/yaml-mode-20180409.607 font-lock is broken
tested on /home/juri/gitlab/harid/harid/config/locales/et.yml

Debugger entered--Lisp error: (error "No match 1 in highlight (1 font-lock-variable-name-face)")
  signal(error ("No match 1 in highlight (1 font-lock-variable-name-face)"))
  error("No match %d in highlight %S" 1 (1 font-lock-variable-name-face))
  font-lock-fontify-keywords-region(3873 3894 nil)
  font-lock-default-fontify-region(3873 3893 nil)
  font-lock-fontify-region(3873 3893)
  #f(compiled-function (fun) #<bytecode 0x44d827d>)(font-lock-fontify-region)
  run-hook-wrapped(#f(compiled-function (fun) #<bytecode 0x44d827d>) font-lock-fontify-region)
  jit-lock--run-functions(3873 3893)
  jit-lock-fontify-now(3873 3893)
  font-lock-ensure(3873 3893)
  occur-engine-line(3873 3893 t)
  occur-engine(#("\\(?:e[̀-̄̆-̧̨̣̭̰̉̌̏̑]\\|[eè-ëēĕėęěȅȇȩᵉḙḛẹẻẽₑℯⅇⓔｅ𝐞𝑒𝒆..." 0 308 (isearch-string "errors" isearch-regexp-function-descr "")) (#<buffer et.yml>) #<buffer *Occur*> 0 t header-line shadow match t)
  occur-1(#("\\(?:e[̀-̄̆-̧̨̣̭̰̉̌̏̑]\\|[eè-ëēĕėęěȅȇȩᵉḙḛẹẻẽₑℯⅇⓔｅ𝐞𝑒𝒆..." 0 308 (isearch-string "errors" isearch-regexp-function-descr "")) nil (#<buffer et.yml>))
  occur(#("\\(?:e[̀-̄̆-̧̨̣̭̰̉̌̏̑]\\|[eè-ëēĕėęěȅȇȩᵉḙḛẹẻẽₑℯⅇⓔｅ𝐞𝑒𝒆..." 0 308 (isearch-string "errors" isearch-regexp-function-descr "")) nil nil)
  isearch-occur("\\(?:e[̀-̄̆-̧̨̣̭̰̉̌̏̑]\\|[eè-ëēĕėęěȅȇȩᵉḙḛẹẻẽₑℯⅇⓔｅ𝐞𝑒𝒆..." nil)
  funcall-interactively(isearch-occur "\\(?:e[̀-̄̆-̧̨̣̭̰̉̌̏̑]\\|[eè-ëēĕėęěȅȇȩᵉḙḛẹẻẽₑℯⅇⓔｅ𝐞𝑒𝒆..." nil)
  call-interactively(isearch-occur nil nil)
  command-execute(isearch-occur)


~/.config/monitors.xml

;; xrandr -q
;; Screen 0: minimum 320 x 200, current 4480 x 1456, maximum 8192 x 8192
;; eDP-1 connected primary 1920x1080+0+0 (normal left inverted right x axis y axis) 309mm x 174mm
;; DP-2-2 connected 2560x1440+1920+16 (normal left inverted right x axis y axis) 597mm x 336mm

;; when exchanged monitores:
;; Screen 0: minimum 320 x 200, current 4480 x 1453, maximum 8192 x 8192
;; eDP-1 connected primary 1920x1080+2560+373 (normal left inverted right x axis y axis) 309mm x 174mm
;; DP-2-2 connected 2560x1440+0+0 (normal left inverted right x axis y axis) 597mm x 336mm

;; when exchanged back:
;; Screen 0: minimum 320 x 200, current 4480 x 1440, maximum 8192 x 8192
;; eDP-1 connected primary 1920x1080+0+360 (normal left inverted right x axis y axis) 309mm x 174mm
;; DP-2-2 connected 2560x1440+1920+0 (normal left inverted right x axis y axis) 597mm x 336mm

;; (message "monitor-geometry: %S" monitor-geometry)
;; (message "frame-geometry: %S" frame-geometry)
;; (message "frame-geometry-in-pixels: %S" frame-geometry-in-pixels)
;; ((height . 1080) (width . 1920) (top . 0) (left . 0))
;; (setq frame-geometry '((height . (text-pixels . 1080)) (width . (text-pixels . 1920)) (top . 0) (left . 0)))
;; (undecorated . t)
;; (fullscreen . maximized)

;; for frames = (and (message "5. frame-monitor-attributes: %S" (assq 'frames attributes)) (cdr (assq 'frames attributes)))
(bak1 (display-monitor-attributes-list frame))
(bak2 (display-monitor-attributes-list frame))
(_ (message "!1. frameset-move-onscreen: %S %S" frame bak1))
(_ (message "!2. frameset-move-onscreen: %S %S" frame bak2))


FIXED in master
(progn
  (man "aliases(5)")
  (forward-button 2)
  (push-button))

Can’t find the 1 agentnewaliases manpage
SHOULD BE
"1 agent newaliases"

IMPLEMENTED IN .emacs
read-password hide input char after delay (default 1 sec)

IMPLEMENTED IN .emacs
wrgrep - word rgrep

REPORTED:
Escape sequences for bottom progress bar are unhandled in shell:

sudo apt install jq
[sudo] password for juri:
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following additional packages will be installed:
  libjq1 libonig4
The following NEW packages will be installed:
  jq libjq1 libonig4
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 276 kB of archives.
After this operation, 930 kB of additional disk space will be used.
Do you want to continue? [Y/n]
Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libonig4 amd64 6.7.0-1 [119 kB]
Get:2 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libjq1 amd64 1.5+dfsg-2 [111 kB]
Get:3 http://archive.ubuntu.com/ubuntu bionic/universe amd64 jq amd64 1.5+dfsg-2 [45,6 kB]
Fetched 276 kB in 0s (707 kB/s)
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline

^[7^[8Selecting previously unselected package libonig4:amd64.
(Reading database ... 325210 files and directories currently installed.)
Preparing to unpack .../libonig4_6.7.0-1_amd64.deb ...
^[7Progress: [  0%] [................................................................................................] ^[8^[7Progress: [  6%] [######..........................................................................................] ^[8Unpacking libonig4:amd64 (6.7.0-1) ...
^[7Progress: [ 13%] [############....................................................................................] ^[8^[7Progress: [ 19%] [##################..............................................................................] ^[8Selecting previously unselected package libjq1:amd64.
Preparing to unpack .../libjq1_1.5+dfsg-2_amd64.deb ...
^[7Progress: [ 25%] [########################........................................................................] ^[8Unpacking libjq1:amd64 (1.5+dfsg-2) ...
^[7Progress: [ 31%] [##############################..................................................................] ^[8^[7Progress: [ 38%] [####################################............................................................] ^[8Selecting previously unselected package jq.
Preparing to unpack .../jq_1.5+dfsg-2_amd64.deb ...
^[7Progress: [ 44%] [##########################################......................................................] ^[8Unpacking jq (1.5+dfsg-2) ...
^[7Progress: [ 50%] [################################################................................................] ^[8^[7Progress: [ 56%] [######################################################..........................................] ^[8Setting up libonig4:amd64 (6.7.0-1) ...
^[7Progress: [ 63%] [############################################################....................................] ^[8^[7Progress: [ 69%] [##################################################################..............................] ^[8Setting up libjq1:amd64 (1.5+dfsg-2) ...
^[7Progress: [ 75%] [########################################################################........................] ^[8^[7Progress: [ 81%] [##############################################################################..................] ^[8Processing triggers for libc-bin (2.27-3ubuntu1) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
Setting up jq (1.5+dfsg-2) ...
^[7Progress: [ 88%] [####################################################################################............] ^[8^[7Progress: [ 94%] [##########################################################################################......] ^[8
^[7^[8

FIXED:
async-shell-command truncates output lines
bug: M-& ps aux RET
ok:  M-! ps aux RET
another example: dpkg -l '*emacs*'
So the question is: why async-shell-command limits COLUMNS to 80, even on wide frames,
whereas M-! has no limitation.

M-x shell limits COLUMNS to window-width

FIXED:
in single-window frame eval shows Local Variables in right-hand window!

the same problem with *Marked Process*:
in horizontall split windows
select a process in Proced, type 'k',
it displays *Marked Process* in adjacent window,
not at bottom!

'g' in *xref* buffer:

Debugger entered--Lisp error: (error "Buffer does not seem to be associated with any file")
  signal(error ("Buffer does not seem to be associated with any file"))
  error("Buffer does not seem to be associated with any file")
  revert-buffer--default(t nil)
  revert-buffer(t)
  funcall-interactively(revert-buffer t)
  call-interactively(revert-buffer nil nil)
  command-execute(revert-buffer)

DON'T CARE about xref anymore:
xref-find-definitions
M-. doesn't work well with windowmove, e.g.

<H-M-right> M-. displays xref in the specified window
but RET still displayed in the original window

The problem occurs only when *xref* appears when unasked for.

M-? xref-find-references RET pops up a large buffer

C-M-. xref-find-apropos RET jumps immediately
C-M-. apropos RET pops up a large buffer

REPORTED:
M-x project-search - can't use M-n to get default value - a word under point like in project-find-regexp
M-x fileloop-continue - inconsistent name prefix, no keybinding
M-x project-find-regexp - maybe allow grep-like output layout as well?

MENTIONED in some bug report:
Chrome clones the frame, not makes the frame

