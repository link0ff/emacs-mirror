#+TODO: TODO | DONE | WONTFIX

* diff-goto-line

https://github.com/dgutov/diff-hl/issues/149
Subject: bug#36526: Open diff at current location (feature request with suggested code)
https://www.reddit.com/r/emacs/comments/efu71g/announce_diffatpoint_now_available_in_melpa/

BETTER TO ADD IT TO A NEW HOOK

Implementations:
1. https://gitlab.com/ideasman42/emacs-diff-at-point
2. (qv "~/.emacs.d/elpa/diff-hl-20200701.2141/diff-hl.el"
    "(defun diff-hl-diff-skip-to (line)")
3. https://lists.gnu.org/archive/html/emacs-devel/2016-02/msg01066.html

Issues:
1. diff-goto-line doesn't work with 'C-x v D'
2. 'C-c C-d' (log-edit-show-diff) leaves point at end, should leave at beginning
3. should be customizable?

Problems

This feature is unusable with 'C-c C-d' (log-edit-show-diff):

1. Often when committing a change 'C-c C-d' (log-edit-show-diff)
   displays only the end of the diff buffer, so some parts of the diff
   might be committed unnoticed.  This is because 'diff-goto-line'
   moves point to some random place in the diff output.  It's difficult
   to understand its logic, why it decides to move to the middle of the
   multi-file diff.
   Sometimes displaying the end of the diff buffer makes an impression
   that it's a complete diff buffer, thus a danger to miss the
   beginning of the partially hidden diff buffer
2. 'C-c C-d' (log-edit-show-diff)
   read-file-name("Use file /dev/null: " "/dev/" "/dev/null" t "null")
   diff-find-file-name()
   diff-goto-line("Makefile" 33 0)
3. on the last hunk it signals the error: "user-error: No next hunk"
4. compilation warnings:
   vc/diff-mode.el:706:1: Warning: Unused lexical variable `i'
   vc/diff-mode.el:733:30: Warning: reference to free variable

Debugger entered--Lisp error: (wrong-type-argument stringp nil)
  string-to-number(nil)
  (let ((start (string-to-number (match-string 3))) (len (string-to-number (match-string 4))))
  (cond ((eobp) nil) ((looking-at diff-hunk-header-re-unified
  (progn (condition-case nil (diff-hunk-next)
  (while (progn (condition-case nil (diff-hunk-next)
  (if (eobp) (goto-char (point-min)) (forward-line -1) (while
  diff-goto-line("manifest.js" 1 0)
  apply(diff-goto-line ("manifest.js" 1 0))
  vc-diff-finish

* inhibit-messages

bug#42865: 28.0.50; Add new 'copy-region-quietly' defcustom
[[file:test.el][./test.el]]

* insert-completion-to-minibuffer

** DONE implement command 'insert-completion-to-minibuffer' and bind to C-RET

** TODO also implement the same for icomplete-mode

* try

** completion branches

CHECK branches:
origin/feature/completions-highlight-modifications

** IDE packages

magit

** project vs projectile

C-x p ! - project-shell-command
C-x p & - project-async-shell-command
C-z p ! - projectile-run-shell-command-in-root
C-z p & - projectile-run-async-shell-command-in-root

C-x p F - project-or-external-find-file
C-x p G - project-or-external-find-regexp
C-x p b - project-switch-to-buffer
C-x p c - project-compile
C-x p d - project-dired
C-x p e - project-eshell
C-x p f - project-find-file
C-x p g - project-find-regexp
C-x p k - project-kill-buffers
C-x p p - project-switch-project
C-x p r - project-query-replace-regexp
C-x p s - project-shell
C-x p v - project-vc-dir

needs:
project-find-file-name
project-find-directory

C-z p d - projectile-find-dir
C-z p D - projectile-dired

C-z p ESC - projectile-project-buffers-other-buffer
C-z p C - projectile-configure-project
C-z p E - projectile-edit-dir-locals
C-z p F - projectile-find-file-in-known-projects
C-z p I - projectile-ibuffer
C-z p K - projectile-package-project
C-z p L - projectile-install-project
C-z p P - projectile-test-project
C-z p R - projectile-regenerate-tags
C-z p S - projectile-save-project-buffers
C-z p T - projectile-find-test-file
C-z p V - projectile-browse-dirty-projects
C-z p a - projectile-find-other-file
C-z p b - projectile-switch-to-buffer
C-z p c - projectile-compile-project
C-z p e - projectile-recentf
C-z p f - projectile-find-file
C-z p g - projectile-find-file-dwim
C-z p i - projectile-invalidate-cache
C-z p j - projectile-find-tag
C-z p k - projectile-kill-buffers
C-z p l - projectile-find-file-in-directory
C-z p m - projectile-commander
C-z p o - projectile-multi-occur
C-z p p - projectile-switch-project
C-z p q - projectile-switch-open-project
C-z p r - projectile-replace
C-z p s - Prefix Command
C-z p t - projectile-toggle-between-implementation-and-test
C-z p u - projectile-run-project
C-z p v - projectile-vc
C-z p x - Prefix Command
C-z p z - projectile-cache-current-file
C-z p <left> - projectile-previous-project-buffer
C-z p <right> - projectile-next-project-buffer

C-z p x e - projectile-run-eshell
C-z p x g - projectile-run-gdb
C-z p x i - projectile-run-ielm
C-z p x s - projectile-run-shell
C-z p x t - projectile-run-term
C-z p x v - projectile-run-vterm

C-z p s g - projectile-grep
C-z p s r - projectile-ripgrep
C-z p s s - projectile-ag

* debbugs

bug#12986: Pressing backspace during isearch exits case-sensitive and word modes

bug#42052: 28.0.50; tab-bar-mode should be frame-local

bug#43405: Tool bar item doesn't align to the right edge

bug#43830: keyboard layout handling incompatible with rest of the OS

bug#44001: vc-print-log-setup-buttons leaves point at eob

* infoman

tried to browse sql.el docstrings in two renamed *Help* buffers, but quickly lost

infoman-help.el should render docstring using standard help functions
in a temporary *Help*-like buffer, then post-process its output
by changing known links to Info links

infoman-man.el should use synchronous man.el (to be implemented in some bug#)

* vc-annotate

vc-annotate should align two windows by setting window-start (in addition to window-point)
like in vi, it was shame to hear this from a vi user

* xref

<H-M-right> M-. on man

check if eglot uses xref M-.

* display-buffer actions

need new display action (direction . right)
with optional parameter (create-window . t)
like windmove-create-window

TRY to use it for 'C-z d' (vc-dir-in-project-root)
