
Debugger entered--Lisp error: (wrong-type-argument arrayp nil)
  substring(nil 0 1)
  file-truename(nil)
  eglot--path-to-uri(nil)
  eglot--TextDocumentIdentifier()
  eglot--signal-textDocument/didClose()
  kill-buffer(#<buffer  *temp*-492063>)
  (and (buffer-name temp-buffer) (kill-buffer temp-buffer))
  (unwind-protect (progn (insert text) (diff-syntax-fontify-props file text line-nb t)) (and (buffer-name temp-buffer) (kill-buffer temp-buffer)))
  (save-current-buffer (set-buffer temp-buffer) (unwind-protect (progn (insert text) (diff-syntax-fontify-props ...
  (let ((temp-buffer (generate-new-buffer " *temp*"))) (save-current-buffer (set-buffer temp-buffer) (unwind-protect (progn (insert text) ...
  (cond ((and file diff-default-directory ...) ...) ...)
  (let ((file (car (diff-hunk-file-names old)))) ...)
  (or (if (and diff-vc-backend (not (eq diff-font-lock-syntax 'hunk-only))) ...) ...)
  (let* ((hunk (buffer-substring-no-properties beg end)) ...) ...
  diff-syntax-fontify-hunk(10530 14909 t)
  diff-syntax-fontify(10530 14909)
  #f(compiled-function (beg end) #<bytecode 0x1cb64d70b7d4e0e5>)(10530 14909)
  diff--iterate-hunks(12505 #f(compiled-function (beg end) #<bytecode 0x1cb64d70b7d4e0e5>))
  diff--font-lock-syntax(12505)
  font-lock-fontify-keywords-region(11965 12505 nil)
  font-lock-default-fontify-region(11980 12480 nil)
  font-lock-fontify-region(11980 12480)
  #f(compiled-function (fun) #<bytecode 0x303b13b2afd8864>)(font-lock-fontify-region)
  run-hook-wrapped(#f(compiled-function (fun) #<bytecode 0x303b13b2afd8864>) font-lock-fontify-region)
  jit-lock--run-functions(11980 12480)
  jit-lock-fontify-now(11980 12480)
  jit-lock-function(11980)
  redisplay_internal\ \(C\ function\)()


vc-annotate should align two windows by setting window-start (in addition to window-point)
like in vi, it was shame to hear this from a vi user


REPLACE read-key with read-char-from-mnibuffer:

- widget-choose (read-key-sequence)


<H-M-right> M-. on man


* gettext i18n

gettextize --dry-run

cd lisp

xgettext --keyword=message *.el **/*.el

  xgettext: Non-ASCII string at calendar/cal-bahai.el:149.
            Please specify the source encoding through --from-code.
       (message "Date is pre-Bahá’í")
     (message "Bahá’í date: %s" s)

xgettext --from-code=UTF-8 -kformat-message -kmessage -kerror -ktramp-message -ktramp-error -kngettext:1,2 *.el **/*.el

 #: replace.el:986
 #, elisp-format
-msgid "Deleted %d matching lines"
-msgstr ""
+msgid "Deleted %d matching line"
+msgid_plural "Deleted %d matching lines"
+msgstr[0] ""
+msgstr[1] ""

xgettext --from-code=UTF-8 -kformat-message -kmessage -kerror -ktramp-message -ktramp-error gnus/*.el -o gnus_messages.po

xgettext --from-code=UTF-8 -kmenu-item *.el **/*.el -o menus.po

 #: menu-bar.el:91
 msgid "New Window on Right"
 msgstr ""

xgettext --from-code=UTF-8 -kdefcustom:3 -kdefvar:3 -kdefun:3 *.el **/*.el -o docstrings.po

 #: isearch.el:178
 msgid "Function(s) to call after isearch has found matches in the buffer."
 msgstr ""


(replace-regexp-in-string
 "%d" "\\\\([0-9]+\\\\)"
 (regexp-opt '("finished with %d match found"
               "finished with %d matches found"
               "finished with no matches found")))
"\\(?:finished with \\(?:\\(?:\\([0-9]+\\) match\\(?:es\\)?\\|no matches\\) found\\)\\)"


(info "(gettext) gettext grok")
     What happens now when the value for, say, ‘LANGUAGE’ changes?
     According to the process explained above the new value of this
     variable is found as soon as the ‘dcgettext’ function is called.
     But this also means the (perhaps) different message catalog file is
     loaded.  In other words: the used language is changed.


dpkg -L 'xemacs21-mulesupport'
/etc/X11/de/app-defaults/XEmacs
! *XlwMenu.file.labelString:               %_File
*XlwMenu.file.labelString:                 Datei (%_F)

sudo locale-gen de_DE.utf8
??? LANG=de_DE xemacs -q



* display-buffer actions

need new display action (direction . right)
with optional parameter (create-window . t)
like windmove-create-window

TRY to use it for 'C-z d' (vc-dir-in-project-root)


Add support for --color-moved
https://github.com/magit/magit/issues/3424
https://github.blog/2018-04-05-git-217-released/#coloring-moved-code


https://github.com/magit/magit/issues/3716
https://github.com/magit/magit/commit/512790bb7119dabcd90a0695a0b506e315d72c2e
https://emacs.stackexchange.com/questions/36071/magit-copy-text-from-stage-section-without-character/36090#36090



* Tabs

frameset like
tabset displayed in tabbar

~/emacs/tabs/awesome-tab/awesome-tab.el

It has such bug that clicking on window-tabs in another window
switches tabs in the selected window


~/src/emacs/tabs/powerline/

(setq powerline-default-separator 'rounded)

(pp mode-line-format)

(let* ((face0 'powerline-active0)
       (face1 'powerline-active1)
       (separator-left (intern (format "powerline-%s-%s"
                                       (powerline-current-separator)
                                       (car powerline-default-separator-dir))))
       (separator-right (intern (format "powerline-%s-%s"
                                        (powerline-current-separator)
                                        (cdr powerline-default-separator-dir))))
       (separator-left-image (funcall separator-left face0 face1))
       (separator-right-image (funcall separator-right face1 face0)))
  (insert (propertize "[" 'display separator-right-image)
          (propertize "]" 'display separator-left-image)))

(setq print-circle nil)
(macroexpand-all '(pl/rounded left))

(defalias 'powerline-rounded-left
  #'(lambda (face1 face2 &optional height)
      (if window-system
          (progn
            (unless height
              (setq height (pl/separator-height)))
            (let* ((color1 (if face1 (pl/hex-color (pl/background-color face1))))
                   (color2 (if face2 (pl/hex-color (pl/background-color face2))))
                   (colori (if (and color1 color2)
                               (pl/interpolate color1 color2)))
                   (color1 (or color1 "None"))
                   (color2 (or color2 "None"))
                   (colori (or colori "None"))
                   (pattern-height (max (- height 6) 0))
                   (second-pattern-height (/ pattern-height 2))
                   (pattern-height pattern-height)
                   (pattern-height-2x (max (- (* height 2) 12) 0))
                   (second-pattern-height-2x (/ pattern-height-2x 2))
                   (pattern-height-2x pattern-height-2x))
              (apply 'create-image
                     (concat
                      (format "/* XPM */ static char * %s_%s[] = { \"%s %s 3 1\", \"0 c %s\", \"1 c %s\", \"2 c %s\"," "rounded"
                              (symbol-name 'left) 6 height color1 color2 colori)
                      (mapconcat 'identity
                                 '("\"211111\"," "\"002111\"," "\"000011\"," "\"000021\"," "\"000001\"," "\"000002\",")
                                 "")
                      (mapconcat 'identity
                                 (cl-subseq '("\"000000\"," "\"000000\"," "\"000000\"," "\"000000\"," "\"000000\"," "\"000000\",") 0 pattern-height)
                                 "")
                      nil nil nil "};")
                     'xpm t :ascent 'center :face
                     (if
                         (and face1 face2)
                         (progn face2))
                     (and
                      (featurep 'mac)
                      (list :data-2x
                            (concat
                             (format "/* XPM */ static char * %s_%s_2x[] = { \"%s %s 3 1\", \"0 c %s\", \"1 c %s\", \"2 c %s\"," "rounded"
                                     (symbol-name 'left)
                                     (* 6 2)
                                     (* height 2)
                                     color1 color2 colori)
                             (mapconcat 'identity
                                        '("\"111111111111\"," "\"002111111111\"," "\"000011111111\"," "\"000000111111\"," "\"000000021111\"," "\"000000001111\"," "\"000000000111\"," "\"000000000011\"," "\"000000000011\"," "\"000000000021\"," "\"000000000001\"," "\"000000000001\",")
                                        "")
                             (mapconcat 'identity
                                        (cl-subseq
                                         '("\"000000000000\"," "\"000000000000\"," "\"000000000000\"," "\"000000000000\"," "\"000000000000\"," "\"000000000000\",")
                                         0 pattern-height-2x)
                                        "")
                             nil nil nil "};")))))))))



