
FIXED:
in single-window frame eval shows Local Variables in right-hand window!

the same problem with *Marked Process*:
in horizontall split windows
select a process in Proced, type 'k',
it displays *Marked Process* in adjacent window,
not at bottom!


xref-find-definitions
M-. doesn't work well with windowmove, e.g.

<H-M-right> M-. displays xref in the specified window
but RET still displayed in the original window


Escape sequences for bottom progress bar are unhandled in shell:

sudo apt install jq
[sudo] password for juri:
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following additional packages will be installed:
  libjq1 libonig4
The following NEW packages will be installed:
  jq libjq1 libonig4
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 276 kB of archives.
After this operation, 930 kB of additional disk space will be used.
Do you want to continue? [Y/n]
Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libonig4 amd64 6.7.0-1 [119 kB]
Get:2 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libjq1 amd64 1.5+dfsg-2 [111 kB]
Get:3 http://archive.ubuntu.com/ubuntu bionic/universe amd64 jq amd64 1.5+dfsg-2 [45,6 kB]
Fetched 276 kB in 0s (707 kB/s)
debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline

78Selecting previously unselected package libonig4:amd64.
(Reading database ... 325210 files and directories currently installed.)
Preparing to unpack .../libonig4_6.7.0-1_amd64.deb ...
7Progress: [  0%] [................................................................................................] 87Progress: [  6%] [######..........................................................................................] 8Unpacking libonig4:amd64 (6.7.0-1) ...
7Progress: [ 13%] [############....................................................................................] 87Progress: [ 19%] [##################..............................................................................] 8Selecting previously unselected package libjq1:amd64.
Preparing to unpack .../libjq1_1.5+dfsg-2_amd64.deb ...
7Progress: [ 25%] [########################........................................................................] 8Unpacking libjq1:amd64 (1.5+dfsg-2) ...
7Progress: [ 31%] [##############################..................................................................] 87Progress: [ 38%] [####################################............................................................] 8Selecting previously unselected package jq.
Preparing to unpack .../jq_1.5+dfsg-2_amd64.deb ...
7Progress: [ 44%] [##########################################......................................................] 8Unpacking jq (1.5+dfsg-2) ...
7Progress: [ 50%] [################################################................................................] 87Progress: [ 56%] [######################################################..........................................] 8Setting up libonig4:amd64 (6.7.0-1) ...
7Progress: [ 63%] [############################################################....................................] 87Progress: [ 69%] [##################################################################..............................] 8Setting up libjq1:amd64 (1.5+dfsg-2) ...
7Progress: [ 75%] [########################################################################........................] 87Progress: [ 81%] [##############################################################################..................] 8Processing triggers for libc-bin (2.27-3ubuntu1) ...
Processing triggers for man-db (2.8.3-2ubuntu0.1) ...
Setting up jq (1.5+dfsg-2) ...
7Progress: [ 88%] [####################################################################################............] 87Progress: [ 94%] [##########################################################################################......] 8
78


~/.emacs.d/.emacs.desktop_BUG

Debugger entered--Lisp error: (wrong-type-argument number-or-marker-p nil)
  +(nil nil -1)
  frameset-move-onscreen(#<frame emacs@t480 0x55a7cd486ed0> t)
  frameset--restore-frame(((minibuffer . t) (undecorated . t) (override-redirect) (font-backend xft x) (font . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (font-parameter . "-misc-fixed-medium-r-normal--10-*-*-*-c-60-iso1064...") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#202020") (background-color . "white") (mouse-color . "#202020") (border-color . "black") (screen-gamma) (line-spacing . 0) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground . "#202020") (scroll-bar-background . "#f0f0f0") (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . bar) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen . maximized) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . light) (cursor-color . "black") (sticky) (environment) (last-focus-update . t) (frameset--id . "AC0F-7D77-6EB5-089B") (frameset--mini t . t) ...) (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1920) (pixel-height . 1036) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "*ee-buffers*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 17835) (start . 15122)) (prev-buffers ("*ee-buffers*" 1 318) ("*shell*<3>" 1687812 1703238) ("/home/juri/gitlab/harid/harid/<2>" 1 1) ("/home/juri/gitlab/harid/<2>" 1 1) ("/home/juri/gitlab/<2>" 1 1) ("/home/juri/gitlab/HarIDSync/" 1 1) ("/home/juri/gitlab/HarIDSync/HarIDSync/<2>" 1 1) ("*shell*<2>" 1 19322))) ((background-color . frameset-filter-sanitize-color) (buffer-list . :never) (buffer-predicate . :never) (buried-buffer-list . :never) (client . :never) (delete-before . :never) (font . frameset-filter-font-param) (foreground-color . frameset-filter-sanitize-color) (frameset--text-pixel-height . :save) (frameset--text-pixel-width . :save) (fullscreen . frameset-filter-shelve-param) (GUI:font . frameset-filter-unshelve-param) (GUI:fullscreen . frameset-filter-unshelve-param) (GUI:height . frameset-filter-unshelve-param) (GUI:width . frameset-filter-unshelve-param) (height . frameset-filter-shelve-param) (outer-window-id . :never) (parent-frame . :never) (parent-id . :never) (mouse-wheel-frame . :never) (tty . frameset-filter-tty-to-GUI) (tty-type . frameset-filter-tty-to-GUI) (width . frameset-filter-shelve-param) (window-id . :never) (window-system . :never) (name . :never) (left . frameset-filter-iconified) (minibuffer . frameset-filter-minibuffer) (top . frameset-filter-iconified)) t)
  frameset-restore([frameset 1 (23641 42117 556471 119000) (desktop . "208") "juri@localhost" nil nil ((((minibuffer . t) (undecorated . t) (override-redirect) (font-backend xft x) (font . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (font-parameter . "-misc-fixed-medium-r-normal--10-*-*-*-c-60-iso1064...") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#202020") (background-color . "white") (mouse-color . "#202020") (border-color . "black") (screen-gamma) (line-spacing . 0) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground . "#202020") (scroll-bar-background . "#f0f0f0") (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . bar) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen . maximized) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . light) (cursor-color . "black") (sticky) (environment) (last-focus-update . t) (frameset--id . "AC0F-7D77-6EB5-089B") (frameset--mini t . t) ...) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1920) (pixel-height . 1036) (total-width . 240) (total-height . 61) (normal-height . 1.0) (normal-width . 1.0) (buffer "*ee-buffers*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 17835) (start . 15122)) (prev-buffers ("*ee-buffers*" 1 318) ("*shell*<3>" 1687812 1703238) ("/home/juri/gitlab/harid/harid/<2>" 1 1) ("/home/juri/gitlab/harid/<2>" 1 1) ("/home/juri/gitlab/<2>" 1 1) ("/home/juri/gitlab/HarIDSync/" 1 1) ("/home/juri/gitlab/HarIDSync/HarIDSync/<2>" 1 1) ("*shell*<2>" 1 19322))))] :reuse-frames t :cleanup-frames t :force-display t :force-onscreen t)
  desktop-restore-frameset()
  desktop-read()
  #f(compiled-function () #<bytecode 0x1569f365e3d5>)()
  run-hooks(after-init-hook delayed-warnings-hook)
  command-line()
  normal-top-level()

display-monitor-attributes-list in frame-monitor-attributes
sometimes returns nil


Add support for --color-moved
https://github.com/magit/magit/issues/3424
https://github.blog/2018-04-05-git-217-released/#coloring-moved-code


https://github.com/magit/magit/issues/3716
https://github.com/magit/magit/commit/512790bb7119dabcd90a0695a0b506e315d72c2e
https://emacs.stackexchange.com/questions/36071/magit-copy-text-from-stage-section-without-character/36090#36090


Debugger entered--Lisp error: (error "Window #<window 4 on  *Minibuf-0*> too small to accommodate state")
  signal(error ("Window #<window 4 on  *Minibuf-0*> too small to ac..."))
  error("Window %s too small to accommodate state" #<window 4 on  *Minibuf-0*>)
  window-state-put((((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1280) (pixel-height . 1396) (total-width . 160) (total-height . 82) (normal-height . 1.0) (normal-width . 0.5) (parameters (clone-of . #<window 257 on windmove.el>)) (buffer #<buffer windmove.el> (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . #<marker at 33716 in windmove.el>) (start . #<marker at 32675 in windmove.el>)) (prev-buffers (#<buffer windmove.el> #<marker at 32675 in windmove.el> #<marker at 33716 in windmove.el>))) #<window 4 on  *Minibuf-0*> t)
  window-swap-states(nil #<window 4 on  *Minibuf-0*>)
  windmove-swap-states-in-direction(down)
  windmove-swap-states-down()
  funcall-interactively(windmove-swap-states-down)
  call-interactively(windmove-swap-states-down nil nil)
  command-execute(windmove-swap-states-down)


Subject: Display monitor not warmed up

Debugger entered--Lisp error: (wrong-type-argument number-or-marker-p nil)
  +(nil nil -1)
  frameset-move-onscreen(#<frame emacs@t480 0x56161eae1b70> t)
  frameset--restore-frame(((minibuffer . t) (undecorated . t) (override-redirect) (font-backend xft x) (font . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (font-parameter . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#212121") (background-color . "white") (mouse-color . "#212121") (border-color . "black") (screen-gamma) (line-spacing . 0) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground . "#212121") (scroll-bar-background . "#d6d6d6") (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . bar) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen . maximized) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . light) (cursor-color . "black") (sticky) (last-focus-update) (wincows ((name . "TODO") (id . 2149251080283452954) (ws ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1920) (pixel-height . 1063) (total-width . 240) (total-height . 63) (normal-height . 1.0) (normal-width . 1.0) (buffer "TODO" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("NEWS" 1 1))) (wc . "Unprintable entity") (point-marker . #<marker at 1 in TODO>) (bl "TODO" " *Wincows*<9337-83BD-691F-1F4C>" "NEWS" "*info*") (bbl))) (frameset--id . "9337-83BD-691F-1F4C") (frameset--mini t . t) ...) (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1920) (pixel-height . 1063) (total-width . 240) (total-height . 62) (normal-height . 1.0) (normal-width . 1.0) (buffer "NEWS" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*info*" 173 227))) ((background-color . frameset-filter-sanitize-color) (buffer-list . :never) (buffer-predicate . :never) (buried-buffer-list . :never) (client . :never) (delete-before . :never) (font . frameset-filter-font-param) (foreground-color . frameset-filter-sanitize-color) (frameset--text-pixel-height . :save) (frameset--text-pixel-width . :save) (fullscreen . frameset-filter-shelve-param) (GUI:font . frameset-filter-unshelve-param) (GUI:fullscreen . frameset-filter-unshelve-param) (GUI:height . frameset-filter-unshelve-param) (GUI:width . frameset-filter-unshelve-param) (height . frameset-filter-shelve-param) (outer-window-id . :never) (parent-frame . :never) (parent-id . :never) (mouse-wheel-frame . :never) (tty . frameset-filter-tty-to-GUI) (tty-type . frameset-filter-tty-to-GUI) (width . frameset-filter-shelve-param) (window-id . :never) (window-system . :never) (name . :never) (left . frameset-filter-iconified) (minibuffer . frameset-filter-minibuffer) (top . frameset-filter-iconified)) t)
  frameset-restore([frameset 1 (23670 43754 555580 467000) (desktop . "208") "juri@localhost" nil nil ((((minibuffer . t) (undecorated . t) (override-redirect) (font-backend xft x) (font . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (font-parameter . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#212121") (background-color . "white") (mouse-color . "#212121") (border-color . "black") (screen-gamma) (line-spacing . 0) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground . "#212121") (scroll-bar-background . "#d6d6d6") (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . bar) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen . maximized) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . light) (cursor-color . "black") (sticky) (last-focus-update . t) (wincows ((name . "wincows.el") (id . 804892577713794826) (ws ... leaf ... ... ... ... ... ... ... ...) (wc . "Unprintable entity") (point-marker . #<marker at 11683 in wincows.el>) (bl "wincows.el" "*ee-buffers*" " *Wincows*<3F0E-8212-E583-D45E>" "*info*" "NEWS") (bbl))) (frameset--id . "3F0E-8212-E583-D45E") (frameset--mini t) ...) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 51) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 2560) (pixel-height . 1396) (total-width . 320) (total-height . 82) (normal-height . 1.0) (normal-width . 1.0) (buffer "*info*" (selected . t) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 227) (start . 173)) (prev-buffers ("NEWS" 1 1))) (((minibuffer . t) (undecorated . t) (override-redirect) (font-backend xft x) (font . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (font-parameter . "-PfEd-DejaVu Sans Mono-normal-normal-normal-*-13-*...") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (horizontal-scroll-bars) (foreground-color . "#212121") (background-color . "white") (mouse-color . "#212121") (border-color . "black") (screen-gamma) (line-spacing . 0) (left-fringe . 8) (right-fringe . 8) (no-special-glyphs) (scroll-bar-foreground . "#212121") (scroll-bar-background . "#d6d6d6") (menu-bar-lines . 0) (tool-bar-lines . 0) (title) (wait-for-wm . t) (tool-bar-position . top) (inhibit-double-buffering) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . bar) (scroll-bar-width . 0) (scroll-bar-height . 0) (alpha) (no-focus-on-map) (no-accept-focus) (fullscreen . maximized) (visibility . t) (skip-taskbar) (z-group) (display-type . color) (background-mode . light) (cursor-color . "black") (sticky) (last-focus-update) (wincows ((name . "TODO") (id . 2149251080283452954) (ws ... leaf ... ... ... ... ... ... ... ...) (wc . "Unprintable entity") (point-marker . #<marker at 1 in TODO>) (bl "TODO" " *Wincows*<9337-83BD-691F-1F4C>" "NEWS" "*info*") (bbl))) (frameset--id . "9337-83BD-691F-1F4C") (frameset--mini t . t) ...) ((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 68) (min-pixel-width . 80) (min-pixel-height-ignore . 34) (min-pixel-width-ignore . 32) (min-pixel-height-safe . 17) (min-pixel-width-safe . 16)) leaf (pixel-width . 1920) (pixel-height . 1063) (total-width . 240) (total-height . 62) (normal-height . 1.0) (normal-width . 1.0) (buffer "NEWS" (selected) (hscroll . 0) (fringes 8 8 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1)) (prev-buffers ("*info*" 173 227))))] :reuse-frames t :cleanup-frames t :force-display t :force-onscreen t)
  desktop-restore-frameset()
  desktop-read()
  #f(compiled-function () #<bytecode 0x158587adf371>)()
  run-hooks(after-init-hook delayed-warnings-hook)
  command-line()
  normal-top-level()

diff --git a/lisp/frameset.el b/lisp/frameset.el
index ac034ec82a..0bb2cf190f 100644
--- a/lisp/frameset.el
+++ b/lisp/frameset.el
@@ -879,6 +879,9 @@ frameset-move-onscreen
When forced onscreen, frames wider than the monitor's workarea are converted
to fullwidth, and frames taller than the workarea are converted to fullheight.
NOTE: This only works for non-iconified frames."
+  (message "! frameset-move-onscreen: %S" (list frame
+                                                (frame-live-p frame)
+                                                (frame-monitor-attributes frame)))
  (pcase-let* ((`(,left ,top ,width ,height) (cl-cdadr (frame-monitor-attributes frame)))
	       (right (+ left width -1))
	       (bottom (+ top height -1))

!1. frameset-move-onscreen: (#<frame emacs@localhost 0x55cd6083f100> x nil)
!2. frameset-move-onscreen: (#<frame emacs@localhost 0x55cd6083f100> x ((name . "eDP-1") (geometry 0 0 1920 1080) (workarea 0 0 1920 1080) (mm-size 309 174) (frames #<frame emacs@localhost 0x55cd6083f100>) (source . "Gdk")))

  (message "!1. frameset-move-onscreen: %S" (list frame
                                                  (frame-live-p frame)
                                                  (frame-monitor-attributes frame)))
  (message "!2. frameset-move-onscreen: %S" (list frame
                                                  (frame-live-p frame)
                                                  (frame-monitor-attributes frame)))

!1. frameset-move-onscreen: (#<frame emacs@localhost 0x55cd6083f100> x nil)
!2. frameset-move-onscreen: (#<frame emacs@localhost 0x55cd6083f100> x ((name . "eDP-1") (geometry 0 0 1920 1080) (workarea 0 0 1920 1080) (mm-size 309 174) (frames #<frame emacs@localhost 0x55cd6083f100>) (source . "Gdk")))

frame-monitor-attributes not warmed up


